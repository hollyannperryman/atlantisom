% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/load_detailed_diet_comp.R
\name{load_detailed_diet_comp}
\alias{load_detailed_diet_comp}
\title{Load Atlantis diet composition by box and layer from \code{DetaileDietCheck.txt}}
\usage{
load_detailed_diet_comp(dir = getwd(), file_diet, fgs)
}
\arguments{
\item{dir}{The directory of the atlantis model output, where the
default is \code{getwd()}.}

\item{file_diet}{A character value, specifying the file name of the
\code{DetailedDietCheck.txt} output file from Atlantis (or see above).
This file is read with \code{data.table::fread()}, so it can be
compressed with a .gz suffix, or uncompressed as a .txt file.
If \code{is.null(dir)}, then \code{file_diet} can be the full file
path or a file in your current working directory, or the \code{file_diet}
will be appended to \code{dir} using \code{file.path}.}

\item{fgs}{A data frame created by \code{\link{load_fgs}} that
reads in the csv file containing functional group names, usually
\code{"functionalGroups.csv"}.}
}
\value{
Returns a data frame of the data to be exported to the AtlantisOM list
 object. The atoutput column is diet in tons and there is an extra column
 identifying the prey that makes up that proportion of species (predator)
 diet.
}
\description{
Imports the \code{DetaileDietCheck.txt} output file from an Atlantis run
and converts the file from wide format to long, where there are seven
columns: (predator) species, age class, time in days, polygon, layer,
diet composition in tons (assuming flagdietcheck=1), and prey (species).
Only non-zero values for diet compostion are included.
}
\details{
NOTE: \code{DetaileDietCheck.txt} is extremely large. We recommend working
with it compressed and using the following pre-processing steps
at the command line to remove the all-0 rows:
Execute in terminal from the directory with the .gz file in it:
\code{zcat < [...]DetailedDietCheck.txt.gz | awk 'NR > 1{s=0; for (i=6;i<=NF;i++) s+=$i; if (s!=0)print}' | gzip > DetDiet.gz}
On linux it would just be zcat filename; macOS needs zcat < filename to work.
The awk statement is saying after the header row (NR>1), sum up the values
from column 6 to the last column and keep the row if they are >0.
The last pipe sends the new file to a zip file.
The column names will be lost, so strip them from the file and cat back together:
\code{zcat < [...]DetailedDietCheck.txt.gz | head -n1 | gzip > DetDietHead.gz}
\code{cat DetDietHead.gz DetDiet.gz > [...]DetDiet.gz}
Then use [...]DetDiet.gz as your input to this function
}
\examples{
\dontrun{
d <- system.file("extdata", "SETAS_Example", package = "atlantisom")
file_diet <- grep("DetailedDietCheck", dir(d), value = TRUE)
fgs <- load_fgs(dir = d, "Functional_groups.csv")
temp <- load__detailed_diet_comp(dir = d, file_diet = file_diet, fgs = fgs)
rm(temp)
}
}
\seealso{
Other load functions: 
\code{\link{load_agebioind}()},
\code{\link{load_bioind}()},
\code{\link{load_biolprm}()},
\code{\link{load_boxarea}()},
\code{\link{load_box}()},
\code{\link{load_bps}()},
\code{\link{load_catch}()},
\code{\link{load_diet_comp}()},
\code{\link{load_fgs}()},
\code{\link{load_fisheries}()},
\code{\link{load_meta}()},
\code{\link{load_nc_annage}()},
\code{\link{load_nc_catchtons}()},
\code{\link{load_nc}()},
\code{\link{load_runprm}()},
\code{\link{load_yoy}()}
}
\author{
Sarah Gaichas
}
\concept{load functions}
